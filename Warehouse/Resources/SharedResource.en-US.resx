<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="CheckOut" xml:space="preserve">
    <value>Check Out</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CreateNewAccount" xml:space="preserve">
    <value>Create new account</value>
  </data>
  <data name="CreateProduct" xml:space="preserve">
    <value>Create Product</value>
  </data>
  <data name="CreateProductManager" xml:space="preserve">
    <value>Create Product Manager</value>
  </data>
  <data name="CreateWarehouse" xml:space="preserve">
    <value>Create Warehouse</value>
  </data>
  <data name="CustomerCreate" xml:space="preserve">
    <value>Customer Create</value>
  </data>
  <data name="DevelopmentMode" xml:space="preserve">
    <value>Development Mode</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error.</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Learn More</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="ModalHeader" xml:space="preserve">
    <value>Modal Header</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="PageSize" xml:space="preserve">
    <value>Page Size</value>
  </data>
  <data name="ProductManager" xml:space="preserve">
    <value> Product Manager</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="ProductType" xml:space="preserve">
    <value>Product Type</value>
  </data>
  <data name="ProductTypeCreate" xml:space="preserve">
    <value>Product Type Create</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="RequestCultureProvider" xml:space="preserve">
    <value>Request Culture Provider:</value>
  </data>
  <data name="RequestID" xml:space="preserve">
    <value>Request ID:</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role:</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ShowUsers" xml:space="preserve">
    <value>Show Users</value>
  </data>
  <data name="ShowWarehouses" xml:space="preserve">
    <value>Show Warehouses</value>
  </data>
  <data name="Storekeeper" xml:space="preserve">
    <value>Storekeeper</value>
  </data>
  <data name="ToggleCookieConsentBanner" xml:space="preserve">
    <value> Toggle Cookie Consent Banner</value>
  </data>
  <data name="ToggleNavigation" xml:space="preserve">
    <value>Toggle Navigation</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="UseThisSpaceToSummarizeYourPrivacyAndCookieUsePolicy" xml:space="preserve">
    <value>Use this space to summarize your privacy and cookie use policy.</value>
  </data>
  <data name="ViewAll" xml:space="preserve">
    <value>View All</value>
  </data>
  <data name="Warehouse" xml:space="preserve">
    <value>Warehouse</value>
  </data>
  <data name="WarehouseNumber" xml:space="preserve">
    <value>Warehouse Number</value>
  </data>
  <data name="Worker" xml:space="preserve">
    <value>Worker</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="DisableEnable" xml:space="preserve">
    <value>Disable / Enable</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Warehouses" xml:space="preserve">
    <value>Warehouses</value>
  </data>
  <data name="AddedDate" xml:space="preserve">
    <value>Added Date</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddToBasket" xml:space="preserve">
    <value>Add to basket</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="Barcode" xml:space="preserve">
    <value>Barode</value>
  </data>
  <data name="ChangeCount" xml:space="preserve">
    <value>Change Count</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="CreateCustomer" xml:space="preserve">
    <value>Create Customer</value>
  </data>
  <data name="CurrentCount" xml:space="preserve">
    <value>Current count</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditCustomer" xml:space="preserve">
    <value>Edit Customer</value>
  </data>
  <data name="EditProduct" xml:space="preserve">
    <value>Edit Product</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Error Message! Your Registration Is Not Complete.</value>
  </data>
  <data name="FinallyPrice" xml:space="preserve">
    <value>Finally Price</value>
  </data>
  <data name="GoBack" xml:space="preserve">
    <value>Go Back</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Move" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="NewUnit" xml:space="preserve">
    <value>New Unit</value>
  </data>
  <data name="NewUser" xml:space="preserve">
    <value>New User</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoProductsToShow" xml:space="preserve">
    <value>No products to show!</value>
  </data>
  <data name="NumberOfWarehouse" xml:space="preserve">
    <value>Number of warehouse</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>ProductName</value>
  </data>
  <data name="ReceiptDate" xml:space="preserve">
    <value>Receipt date</value>
  </data>
  <data name="ReceiptPrice" xml:space="preserve">
    <value>Receipt Price</value>
  </data>
  <data name="RegErrorMessage" xml:space="preserve">
    <value>ErrorMessage! Such A Buyer Has Already Been Registered.</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="RegistrationCustomer" xml:space="preserve">
    <value>Registration Customer</value>
  </data>
  <data name="RegSuccessMessage" xml:space="preserve">
    <value>Success Message! Your Registration Is Complete.</value>
  </data>
  <data name="Sale" xml:space="preserve">
    <value>Sale</value>
  </data>
  <data name="SalePrice" xml:space="preserve">
    <value>Sale price</value>
  </data>
  <data name="SelectCustomer" xml:space="preserve">
    <value>Select Customer</value>
  </data>
  <data name="SelectName" xml:space="preserve">
    <value>Select the name</value>
  </data>
  <data name="SelectType" xml:space="preserve">
    <value>Select the type</value>
  </data>
  <data name="SelectUnit" xml:space="preserve">
    <value>Select the unit</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="ThereAreNoProducts" xml:space="preserve">
    <value>There are no products!</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="WriteOut" xml:space="preserve">
    <value>Write out</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="AreYouSureToDelete" xml:space="preserve">
    <value>Are you sure to delete?</value>
  </data>
  <data name="CountOfOut" xml:space="preserve">
    <value>Count of out</value>
  </data>
  <data name="CountOfSaled" xml:space="preserve">
    <value>Count of saled</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="CreateUnit" xml:space="preserve">
    <value>Create unit</value>
  </data>
  <data name="DateOfSaled" xml:space="preserve">
    <value>Date of saled</value>
  </data>
  <data name="DateOfWriteOut" xml:space="preserve">
    <value>Date of write out</value>
  </data>
  <data name="Deal" xml:space="preserve">
    <value>Deal</value>
  </data>
  <data name="DeletePage" xml:space="preserve">
    <value>Delete page</value>
  </data>
  <data name="EditUnit" xml:space="preserve">
    <value>Edit unit</value>
  </data>
  <data name="EditWareHouse" xml:space="preserve">
    <value>Edit Warehouse</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="ImportCount" xml:space="preserve">
    <value>Import count</value>
  </data>
  <data name="PriceOfOut" xml:space="preserve">
    <value>Price of out</value>
  </data>
  <data name="Saled" xml:space="preserve">
    <value>Saled</value>
  </data>
  <data name="SelectTheDeal" xml:space="preserve">
    <value>Select the deal</value>
  </data>
  <data name="ThereAreNoWarehouses" xml:space="preserve">
    <value>There are no warehouses!</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="WarehouseAddress" xml:space="preserve">
    <value>Warehouse Address</value>
  </data>
  <data name="ProductTypes" xml:space="preserve">
    <value>Product types</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ThereAreNoUsers" xml:space="preserve">
    <value>There are no users!</value>
  </data>
  <data name="ThereAreNoUnits" xml:space="preserve">
    <value>No units to show!</value>
  </data>
</root>