@*@model IPagedList<dynamic>*@
@model  ProductManagerViewModel
@{
    ViewData["Title"] = "Index";
}
@using Warehouse.Resources

@inject LocService SharedLocalizer
<form method="get" asp-action="Index">
    <div class="form-inline form-group">
        <select asp-for="TypeId" asp-items="ViewBag.Types">
            <option selected value="">All types</option>
        </select>

        <select asp-for="ProductId" asp-items="ViewBag.Products">
            <option selected value="">All products</option>
        </select>

        <select asp-for="WarehouseID" asp-items="ViewBag.Warehouses">
            <option selected value="">All products</option>
        </select>

        <label class="control-label">@SharedLocalizer.GetLocalizedHtmlString("PageSize")</label>
        <input class="form-control" type="number" min="1" asp-for="PageSize" />

        <input type="submit" value="Filter" class="btn btn-default" />
    </div>
</form>
<br />
<div class="table-responsive">
    <table id="pmTable" class="table table-bordered">
        <thead>
            <tr>
                <th>@SharedLocalizer.GetLocalizedHtmlString("ProductType")</th>
                <th>@SharedLocalizer.GetLocalizedHtmlString("ProductName")</th>
                <th>@SharedLocalizer.GetLocalizedHtmlString("Count")</th>
                <th>@SharedLocalizer.GetLocalizedHtmlString("CurrentCount")</th>
                <th>@SharedLocalizer.GetLocalizedHtmlString("Unit")</th>
                @if (User.IsInRole("Worker"))
                {
                    <th>@SharedLocalizer.GetLocalizedHtmlString("AddToBasket")</th>
                }
                <th>@SharedLocalizer.GetLocalizedHtmlString("Show")</th>
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.paged.Count == 0)
            {
                <tr><td colspan="8" class="text-center">@SharedLocalizer.GetLocalizedHtmlString("ThereAreNoProducts")</td></tr>
            }
            @foreach (dynamic productManager in ViewBag.paged)
            {
                if (productManager.CurrentCount != 0)
                {
                <tr>
                    <td hidden="hidden"><input id="id" type="hidden" value="@productManager.Product.Id" /></td>
                    <td class="secondTd">@productManager.Product.ProductType.Name<input id="pmIdInp" type="hidden"  /><input type="hidden" id="basketpmId" value="@ViewBag.BasketPMId" /></td>
                    <td>@productManager.Product.Name</td>
                    <td>@productManager.Count</td>
                    <td class="currentCount">@productManager.CurrentCount</td>
                    <td>@productManager.Product.Unit.Name</td>
                    @if (User.IsInRole("Worker"))
                    {
                        <td><a class="Added btn btn-info btn-rounded btn-waves-effect waves-light">@SharedLocalizer.GetLocalizedHtmlString("Add") <i class="fas fa-plus-square ml-1"></i></a></td>
                        <td style="padding-top: 20px;"><a class="showik btn btn-rounded btn-waves-effect waves-light" asp-action="Show" asp-route-id="@productManager.Product.Id">Show</a></td>
                    }
                    else
                    {
                        <td style="padding-top: 12px;"><a class="showik btn btn-rounded btn-waves-effect waves-light" asp-action="Show" asp-route-id="@productManager.Product.Id">Show</a></td>
                    }
                </tr>
                }
            }
        </tbody>
    </table>
 </div>
    <pager list="@ViewBag.paged" asp-route-WarehouseID="@Model.WarehouseID" asp-route-PageSize="@Model.PageSize" asp-route-TypeId="@Model.TypeId" asp-route-ProductId="@Model.ProductId" asp-controller="ProductManager" asp-action="Index" />

    @section Scripts{
        <link href="~/css/jquery-confirm.min.css" rel="stylesheet" />
        <script src="~/js/jquery-confirm.min.js"></script>
        <script src="~/lib/jquery/dist/chosen.jquery.min.js"></script>
        <link href="~/css/chosen.min.css" rel="stylesheet" />
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");}
        <script>
            $("#ProductId").on("chosen:ready", function (evt, params) {
                let select = $("#TypeId").children("option:selected").val();
                let name = $("#ProductId").children("option:selected").val();
                if (select !== "") {
                    GetProducts(select);
                    if (name !== "") {
                        $("#ProductId").val(name);
                        $('#ProductId').trigger("chosen:updated");
                    }
                }
            });
            $("#TypeId").chosen({
                search_contains: true,
                width: "15%"
            });
            $("#ProductId").chosen({
                search_contains: true,
                width: "15%"
            });
            $(() => {
                $("#TypeId").on("change", function () {
                    var selected = $(this).children("option:selected").val();
                    GetProducts(selected);

                });
            });
            function GetProducts(select) {
                $.ajax({
                    url: '/Products/Get',
                    type: "POST",
                    data: JSON.stringify(select),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: false,
                    success: function (data) {
                        $("#ProductId").empty();
                        $("#ProductId").append("<option selected value=''>All products</select>");
                        data.forEach(function (element) {
                            $("#ProductId").append("<option value=" + element.id + ">" + element.name + "</option>");
                        });
                        $("#ProductId").trigger("chosen:updated");
                    }
                })
            }
            //Add product to the basket
            $(() => {
                $("a.Added").on("click", function () {
                    var $Id = $(this).parents("tr").children("td:first").children(":input").val();
                    var thisTag = $(this).parents("tr").children("td.currentCount");
                    var $currentCount = parseInt(thisTag.html());
                    var pmId = $(this).parent().parent().children(".second").children("#pmIdInp").val();
                    var basketProdManId = $(this).parent().parent().children(".second").children("#basketpmId").val();
                    $.confirm({
                        title: 'Write out!',
                        content: '' +
                            '<div class="form-group">' +
                            '<label>Select quantity to add to cart!</label>' +
                            '<input type="number" placeholder="0" min="0" value="0"  class="quantity form-control" required />' +
                            '</div>',
                        buttons: {
                            formSubmit: {
                                text: 'Add',
                                btnClass: 'btn-dark',
                                action: function () {
                                    var $currentQuantity = parseInt(this.$content.find('.quantity').val());
                                    if (($currentQuantity > $currentCount || $currentQuantity == 0) && pmId != basketProdManId) {
                                        $.confirm({
                                            icon: 'fas fa-exclamation-triangle',
                                            title: 'Warehouse!',
                                            content: 'An error has occurred. Write the actual amount!',
                                            type: 'red',
                                            typeAnimated: true,
                                            buttons: {
                                                close: {
                                                    btnClass: "btn-red",
                                                    action: function () {
                                                    }
                                                }
                                            }
                                        });
                                        return false;
                                    }
                                    $.ajax({
                                        type: "POST",
                                        data: {
                                            id: $Id,
                                            quantity: $currentQuantity,
                                            prodManId: pmId
                                        },
                                        async: false,
                                        url: "../../ProductManager/Add",
                                        success: function (result) {
                                            if (result) {
                                                error = false;
                                                $.confirm({
                                                    icon: 'fas fa-check-circle',
                                                    title: 'Warehouse!',
                                                    content: 'Product added to cart!',
                                                    type: 'dark',
                                                    typeAnimated: true,
                                                    buttons: {
                                                        close: {
                                                            btnClass: "btn-dark",
                                                            action: function () {
                                                            }
                                                        }
                                                    }
                                                });
                                            }
                                            else {
                                                error = true;
                                                $.confirm({
                                                    icon: 'fas fa-exclamation-triangle',
                                                    title: 'Warehouse!',
                                                    content: 'An error has occurred. Please, try again!',
                                                    type: 'red',
                                                    typeAnimated: true,
                                                    buttons: {
                                                        close: {
                                                            btnClass: "btn-red",
                                                            action: function () {
                                                            }
                                                        }
                                                    }
                                                });
                                            }
                                        }
                                    });
                                    if (error) return false;
                                }
                            },
                            cancel: function () {
                                //close
                            },
                        },
                    });
                });
            });
        </script>

    }
